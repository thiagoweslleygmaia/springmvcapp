DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [FORCE]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=? for update nowait
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39ce27f2]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [PESSIMISTIC_READ]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c96a4ea]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [PESSIMISTIC_WRITE]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60c16548]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [PESSIMISTIC_FORCE_INCREMENT]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=? for update nowait
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@511816c0]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [OPTIMISTIC]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5339bbad]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : localizacaoDepartamento
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : nomeDepartamento
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=br.com.springmvc.model.Departamento)
    - Returns
       - EntityReturnImpl(entity=br.com.springmvc.model.Departamento, querySpaceUid=<gen:0>, path=br.com.springmvc.model.Departamento)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=br.com.springmvc.model.Departamento)
          - SQL table alias mapping - departamen0_
          - alias suffix - 0_
          - suffixed key columns - {COD_DEPARTAMENTO1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity br.com.springmvc.model.Departamento [OPTIMISTIC_FORCE_INCREMENT]: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity br.com.springmvc.model.Departamento: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity br.com.springmvc.model.Departamento: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=?
DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@localhost:1521:xe]
DEBUG main org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator - No actions specified; doing nothing
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG main org.hibernate.query.spi.NamedQueryRepository - Checking 0 named HQL queries
DEBUG main org.hibernate.query.spi.NamedQueryRepository - Checking 0 named SQL queries
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5a5c128
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: e0560366-63cb-4c6b-909e-b7b52bfcec93 (<unnamed>)
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'sessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'departamentoDaoImpl' to bean named 'sessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'departamentoDaoImpl'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionAttributeSource'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionInterceptor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'applicationConfig'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Autowiring by type from bean name 'transactionManager' via factory method to bean named 'sessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'transactionManager'
INFO main org.springframework.orm.hibernate5.HibernateTransactionManager - Using DataSource [org.springframework.jdbc.datasource.DriverManagerDataSource@51dcb805] of Hibernate SessionFactory for HibernateTransactionManager
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
DEBUG main org.springframework.web.context.support.GenericWebApplicationContext - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@3e134896]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
DEBUG main org.springframework.core.env.PropertySourcesPropertyResolver - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Storing ApplicationContext in cache under key [[WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@1136b469 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 0, missCount = 1]
DEBUG main org.springframework.test.context.web.ServletTestExecutionListener - Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@6579c3d9, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@6579c3d9, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]].
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@1136b469 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 1, missCount = 1]
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected element of bean 'br.com.springmvc.test.DepartamentoDaoTest': AutowiredFieldElement for br.com.springmvc.dao.DepartamentoDao br.com.springmvc.test.DepartamentoDaoTest.departamentoDao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'departamentoDaoImpl'
DEBUG main org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'br.com.springmvc.test.DepartamentoDaoTest' to bean named 'departamentoDaoImpl'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.test.DepartamentoDaoTest.testSuccessBuscarDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'br.com.springmvc.test.DepartamentoDaoTest' with 0 common interceptors and 1 specific interceptors
DEBUG main org.springframework.aop.framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [br.com.springmvc.test.DepartamentoDaoTest@6579c3d9]
DEBUG main org.springframework.aop.framework.CglibAopProxy - Unable to apply any optimisations to advised method: public void br.com.springmvc.test.DepartamentoDaoTest.testSuccessBuscarDepartamento()
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.test.DepartamentoDaoTest.testSuccessListarDepartamentos' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.aop.framework.CglibAopProxy - Unable to apply any optimisations to advised method: public void br.com.springmvc.test.DepartamentoDaoTest.testSuccessListarDepartamentos()
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.test.DepartamentoDaoTest.testSuccessAtualizarDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.aop.framework.CglibAopProxy - Unable to apply any optimisations to advised method: public void br.com.springmvc.test.DepartamentoDaoTest.testSuccessAtualizarDepartamento()
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.test.DepartamentoDaoTest.testSuccessExcluirDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.aop.framework.CglibAopProxy - Unable to apply any optimisations to advised method: public void br.com.springmvc.test.DepartamentoDaoTest.testSuccessExcluirDepartamento()
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.test.DepartamentoDaoTest.testSuccessIncluirDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.aop.framework.CglibAopProxy - Unable to apply any optimisations to advised method: public void br.com.springmvc.test.DepartamentoDaoTest.testSuccessIncluirDepartamento()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Found 'hashCode' method: public native int java.lang.Object.hashCode()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
DEBUG main org.springframework.aop.framework.CglibAopProxy - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
DEBUG main org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@6579c3d9, testMethod = testSuccessBuscarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.test.DepartamentoDaoTest.testSuccessBuscarDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@6579c3d9, testMethod = testSuccessBuscarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration [null] for test class [br.com.springmvc.test.DepartamentoDaoTest].
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Using TransactionConfigurationAttributes [TransactionConfigurationAttributes@44afefd5 transactionManagerName = '', defaultRollback = true] for test class [br.com.springmvc.test.DepartamentoDaoTest].
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@1136b469 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 2, missCount = 1]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Retrieved default @Rollback(true) for test class [br.com.springmvc.test.DepartamentoDaoTest].
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@6579c3d9, testMethod = testSuccessBuscarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Creating new transaction with name [br.com.springmvc.test.DepartamentoDaoTest.testSuccessBuscarDepartamento]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@localhost:1521:xe]
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [oracle.jdbc.driver.T4CConnection@293cde83]
INFO main org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@6579c3d9, testMethod = testSuccessBuscarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@25c5e994]; rollback [true]
DEBUG main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@87abc48
INFO main org.hibernate.hql.internal.QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: from br.com.springmvc.model.Departamento d where d.codDepartamento = :codDepartamento
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'br'
    |        |  |  |  |  \-[IDENT] Node: 'com'
    |        |  |  |  \-[IDENT] Node: 'springmvc'
    |        |  |  \-[IDENT] Node: 'model'
    |        |  \-[IDENT] Node: 'Departamento'
    |        \-[ALIAS] Node: 'd'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'codDepartamento'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'codDepartamento'

DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : br.com.springmvc.model.Departamento (d) -> departamen0_
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : d -> departamen0_.COD_DEPARTAMENTO
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : codDepartamento -> org.hibernate.type.LongType@f14a7d4
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : d.codDepartamento -> departamen0_.COD_DEPARTAMENTO
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} DEPARTAMENTO departamen0_ ) ( where ( = ( departamen0_.COD_DEPARTAMENTO departamen0_.COD_DEPARTAMENTO codDepartamento ) ? ) ) )
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [DEPARTAMENTO departamen0_]
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (DEPARTAMENTO)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=DEPARTAMENTO,tableAlias=departamen0_,origin=null,columns={,className=br.com.springmvc.model.Departamento}}}
    |  \-[SQL_TOKEN] SqlFragment: 'departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[d], fromElementByTableAlias=[departamen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'DEPARTAMENTO departamen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=DEPARTAMENTO,tableAlias=departamen0_,origin=null,columns={,className=br.com.springmvc.model.Departamento}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'departamen0_.COD_DEPARTAMENTO' {propertyName=codDepartamento,dereferenceType=PRIMITIVE,getPropertyPath=codDepartamento,path=d.codDepartamento,tableAlias=departamen0_,className=br.com.springmvc.model.Departamento,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'departamen0_.COD_DEPARTAMENTO' {alias=d, className=br.com.springmvc.model.Departamento, tableAlias=departamen0_}
          |  \-[IDENT] IdentNode: 'codDepartamento' {originalText=codDepartamento}
          \-[NAMED_PARAM] ParameterNode: '?' {name=codDepartamento, expectedType=org.hibernate.type.LongType@f14a7d4}

DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: from br.com.springmvc.model.Departamento d where d.codDepartamento = :codDepartamento
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_, departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_, departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_ from DEPARTAMENTO departamen0_ where departamen0_.COD_DEPARTAMENTO=?
DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.SQL - 
    select
        departamen0_.COD_DEPARTAMENTO as COD_DEPARTAMENTO1_0_,
        departamen0_.LOCALIZACAO_DEPARTAMENTO as LOCALIZACAO_DEPART2_0_,
        departamen0_.NOME_DEPARTAMENTO as NOME_DEPARTAMENTO3_0_ 
    from
        DEPARTAMENTO departamen0_ 
    where
        departamen0_.COD_DEPARTAMENTO=?
DEBUG main org.hibernate.loader.Loader - Result set row: 0
DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[br.com.springmvc.model.Departamento#1]
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Resolving associations for [br.com.springmvc.model.Departamento#1]
DEBUG main org.hibernate.engine.internal.TwoPhaseLoad - Done materializing entity [br.com.springmvc.model.Departamento#1]
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Initiating transaction rollback
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Rolling back Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[br.com.springmvc.model.Departamento#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - rolling back
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
INFO main org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@6579c3d9, testMethod = testSuccessBuscarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@6579c3d9, testMethod = testSuccessBuscarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
DEBUG main org.springframework.test.context.web.ServletTestExecutionListener - Resetting RequestContextHolder for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@6579c3d9, testMethod = testSuccessBuscarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [br.com.springmvc.test.DepartamentoDaoTest]
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [br.com.springmvc.test.DepartamentoDaoTest]
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@1136b469 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 3, missCount = 1]
DEBUG main org.springframework.test.context.web.ServletTestExecutionListener - Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@8d7b252, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@8d7b252, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]].
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@1136b469 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 4, missCount = 1]
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected element of bean 'br.com.springmvc.test.DepartamentoDaoTest': AutowiredFieldElement for br.com.springmvc.dao.DepartamentoDao br.com.springmvc.test.DepartamentoDaoTest.departamentoDao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'departamentoDaoImpl'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'br.com.springmvc.test.DepartamentoDaoTest' with 0 common interceptors and 1 specific interceptors
DEBUG main org.springframework.aop.framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [br.com.springmvc.test.DepartamentoDaoTest@8d7b252]
DEBUG main org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@8d7b252, testMethod = testSuccessAtualizarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.test.DepartamentoDaoTest.testSuccessAtualizarDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@8d7b252, testMethod = testSuccessAtualizarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@1136b469 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 5, missCount = 1]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Retrieved default @Rollback(true) for test class [br.com.springmvc.test.DepartamentoDaoTest].
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@8d7b252, testMethod = testSuccessAtualizarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Creating new transaction with name [br.com.springmvc.test.DepartamentoDaoTest.testSuccessAtualizarDepartamento]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@localhost:1521:xe]
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [oracle.jdbc.driver.T4CConnection@4682eba5]
INFO main org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@8d7b252, testMethod = testSuccessAtualizarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@25c5e994]; rollback [true]
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Initiating transaction rollback
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Rolling back Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[br.com.springmvc.model.Departamento#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - rolling back
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
INFO main org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@8d7b252, testMethod = testSuccessAtualizarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@8d7b252, testMethod = testSuccessAtualizarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
DEBUG main org.springframework.test.context.web.ServletTestExecutionListener - Resetting RequestContextHolder for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@8d7b252, testMethod = testSuccessAtualizarDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [br.com.springmvc.test.DepartamentoDaoTest]
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [br.com.springmvc.test.DepartamentoDaoTest]
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@1136b469 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 6, missCount = 1]
DEBUG main org.springframework.test.context.web.ServletTestExecutionListener - Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@7a7d1b47, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@7a7d1b47, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]].
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@1136b469 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 7, missCount = 1]
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected element of bean 'br.com.springmvc.test.DepartamentoDaoTest': AutowiredFieldElement for br.com.springmvc.dao.DepartamentoDao br.com.springmvc.test.DepartamentoDaoTest.departamentoDao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'departamentoDaoImpl'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'br.com.springmvc.test.DepartamentoDaoTest' with 0 common interceptors and 1 specific interceptors
DEBUG main org.springframework.aop.framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [br.com.springmvc.test.DepartamentoDaoTest@7a7d1b47]
DEBUG main org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@7a7d1b47, testMethod = testSuccessIncluirDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.test.DepartamentoDaoTest.testSuccessIncluirDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@7a7d1b47, testMethod = testSuccessIncluirDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@1136b469 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 8, missCount = 1]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Retrieved default @Rollback(true) for test class [br.com.springmvc.test.DepartamentoDaoTest].
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@7a7d1b47, testMethod = testSuccessIncluirDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Creating new transaction with name [br.com.springmvc.test.DepartamentoDaoTest.testSuccessIncluirDepartamento]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@localhost:1521:xe]
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [oracle.jdbc.driver.T4CConnection@6eb82908]
INFO main org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@7a7d1b47, testMethod = testSuccessIncluirDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@25c5e994]; rollback [true]
DEBUG main org.hibernate.SQL - 
    select
        DEPARTAMENTO_SEQ.nextval 
    from
        dual
DEBUG main org.hibernate.id.enhanced.SequenceStructure - Sequence value obtained: 124
DEBUG main org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
DEBUG main org.hibernate.event.internal.AbstractSaveEventListener - Generated identifier: 75, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Initiating transaction rollback
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Rolling back Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[br.com.springmvc.model.Departamento#75]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=1} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - rolling back
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
INFO main org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@7a7d1b47, testMethod = testSuccessIncluirDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@7a7d1b47, testMethod = testSuccessIncluirDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
DEBUG main org.springframework.test.context.web.ServletTestExecutionListener - Resetting RequestContextHolder for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@7a7d1b47, testMethod = testSuccessIncluirDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [br.com.springmvc.test.DepartamentoDaoTest]
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [br.com.springmvc.test.DepartamentoDaoTest]
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@1136b469 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 9, missCount = 1]
DEBUG main org.springframework.test.context.web.ServletTestExecutionListener - Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@328902d5, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@328902d5, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]].
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@1136b469 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 10, missCount = 1]
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected element of bean 'br.com.springmvc.test.DepartamentoDaoTest': AutowiredFieldElement for br.com.springmvc.dao.DepartamentoDao br.com.springmvc.test.DepartamentoDaoTest.departamentoDao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'departamentoDaoImpl'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'br.com.springmvc.test.DepartamentoDaoTest' with 0 common interceptors and 1 specific interceptors
DEBUG main org.springframework.aop.framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [br.com.springmvc.test.DepartamentoDaoTest@328902d5]
DEBUG main org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@328902d5, testMethod = testSuccessExcluirDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.test.DepartamentoDaoTest.testSuccessExcluirDepartamento' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@328902d5, testMethod = testSuccessExcluirDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@1136b469 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 11, missCount = 1]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Retrieved default @Rollback(true) for test class [br.com.springmvc.test.DepartamentoDaoTest].
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@328902d5, testMethod = testSuccessExcluirDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Creating new transaction with name [br.com.springmvc.test.DepartamentoDaoTest.testSuccessExcluirDepartamento]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Opened new Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] for Hibernate transaction
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:oracle:thin:@localhost:1521:xe]
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - begin
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [oracle.jdbc.driver.T4CConnection@72e789cb]
INFO main org.springframework.test.context.transaction.TransactionContext - Began transaction (1) for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@328902d5, testMethod = testSuccessExcluirDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.hibernate5.HibernateTransactionManager@25c5e994]; rollback [true]
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Initiating transaction rollback
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Rolling back Hibernate transaction on Session [SessionImpl(PersistenceContext[entityKeys=[EntityKey[br.com.springmvc.model.Departamento#1]],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=1} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])]
DEBUG main org.hibernate.engine.transaction.internal.TransactionImpl - rolling back
DEBUG main org.springframework.orm.hibernate5.HibernateTransactionManager - Closing Hibernate Session [SessionImpl(PersistenceContext[entityKeys=[],collectionKeys=[]];ActionQueue[insertions=ExecutableList{size=0} updates=ExecutableList{size=0} deletions=ExecutableList{size=0} orphanRemovals=ExecutableList{size=0} collectionCreations=ExecutableList{size=0} collectionRemovals=ExecutableList{size=0} collectionUpdates=ExecutableList{size=0} collectionQueuedOps=ExecutableList{size=0} unresolvedInsertDependencies=null])] after transaction
INFO main org.springframework.test.context.transaction.TransactionContext - Rolled back transaction for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@328902d5, testMethod = testSuccessExcluirDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@328902d5, testMethod = testSuccessExcluirDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
DEBUG main org.springframework.test.context.web.ServletTestExecutionListener - Resetting RequestContextHolder for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@328902d5, testMethod = testSuccessExcluirDepartamento@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [br.com.springmvc.test.DepartamentoDaoTest]
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [br.com.springmvc.test.DepartamentoDaoTest]
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@1136b469 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 12, missCount = 1]
DEBUG main org.springframework.test.context.web.ServletTestExecutionListener - Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@67c119b7, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
DEBUG main org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@67c119b7, testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]].
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@1136b469 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 13, missCount = 1]
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected element of bean 'br.com.springmvc.test.DepartamentoDaoTest': AutowiredFieldElement for br.com.springmvc.dao.DepartamentoDao br.com.springmvc.test.DepartamentoDaoTest.departamentoDao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'departamentoDaoImpl'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator - Creating implicit proxy for bean 'br.com.springmvc.test.DepartamentoDaoTest' with 0 common interceptors and 1 specific interceptors
DEBUG main org.springframework.aop.framework.CglibAopProxy - Creating CGLIB proxy: target source is SingletonTargetSource for target object [br.com.springmvc.test.DepartamentoDaoTest@67c119b7]
DEBUG main org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test method: context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@67c119b7, testMethod = testSuccessListarDepartamentos@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'br.com.springmvc.test.DepartamentoDaoTest.testSuccessListarDepartamentos' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@67c119b7, testMethod = testSuccessListarDepartamentos@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.cache - Spring test ApplicationContext cache statistics: [DefaultContextCache@1136b469 size = 1, maxSize = 32, parentContextCount = 0, hitCount = 14, missCount = 1]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Retrieved default @Rollback(true) for test class [br.com.springmvc.test.DepartamentoDaoTest].
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@731a74c testClass = DepartamentoDaoTest, testInstance = br.com.springmvc.test.DepartamentoDaoTest@67c119b7, testMethod = testSuccessListarDepartamentos@DepartamentoDaoTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@369f73a2 testClass = DepartamentoDaoTest, locations = '{}', classes = '{class br.com.springmvc.config.ApplicationConfig}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[[empty]], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.test.context.web.WebDelegatingSmartContextLoader', parent = [null]]].
